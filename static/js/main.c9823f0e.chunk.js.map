{"version":3,"sources":["components/GoodsList.jsx","App.js","index.js"],"names":["GoodsList","this","props","goods","map","item","key","React","PureComponent","goodsFromServer","preparedValues","App","state","showList","isReversed","sortBy","value","handleChange","event","setState","target","startButton","reverse","sortAlph","sortLength","reset","goodsList","filter","good","length","sort","g1","g2","localeCompare","className","type","onClick","onChange","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,EAAb,uKAEI,OACE,4BACGC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAAI,OACxB,wBAAIC,IAAKD,GAAOA,WAL1B,GAA+BE,IAAMC,eCC/BC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAqIpCC,E,4MAlIbC,MAAQ,CACNC,UAAU,EACVC,YAAY,EACZC,OAAQ,GACRC,MAAO,K,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAME,OAAOJ,S,EAGtCK,YAAc,WACZ,EAAKF,SAAS,CAAEN,UAAU,K,EAG5BS,QAAU,WACR,EAAKH,UAAS,SAAAP,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAIvBS,SAAW,WACT,EAAKJ,SAAS,CAAEJ,OAAQ,c,EAG1BS,WAAa,WACX,EAAKL,SAAS,CAAEJ,OAAQ,Y,EAG1BU,MAAQ,WACN,EAAKN,SAAS,CACZJ,OAAQ,GAAID,YAAY,EAAOE,MAAO,O,uDAIhC,IAAD,EACyCf,KAAKW,MAA7CE,EADD,EACCA,WAAYC,EADb,EACaA,OAAQF,EADrB,EACqBA,SAAUG,EAD/B,EAC+BA,MAElCU,EAAS,UAAOjB,GAuBpB,OArBIO,EAAQ,IACVU,EAAS,YAAOjB,EAAgBkB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUb,OAGhEU,EAAUI,MAAK,SAACC,EAAIC,GAClB,OAAQjB,GACN,IAAK,WACH,OAAOgB,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGF,OAASG,EAAGH,OAExB,QACE,OAAO,MAITf,GACFY,EAAUJ,UAIV,yBAAKY,UAAU,6BACb,wBAAIA,UAAU,cAAd,UACErB,GACA,4BACEsB,KAAK,SACLD,UAAU,iCACVE,QAASnC,KAAKoB,aAHhB,SAQDR,GACC,oCACE,kBAAC,EAAD,CACEV,MAAOuB,IAET,6BACE,4BACES,KAAK,SACLC,QAASnC,KAAKqB,QACdY,UAAU,+BAHZ,WAOA,4BACEC,KAAK,SACLC,QAASnC,KAAKsB,SACdW,UAAU,kCAHZ,uBAOA,4BACEC,KAAK,SACLC,QAASnC,KAAKuB,WACdU,UAAU,kCAHZ,kBAOA,4BACEC,KAAK,SACLC,QAASnC,KAAKwB,MACdS,UAAU,iCAHZ,UAQF,yBAAKA,UAAU,qBACb,4BACElB,MAAOf,KAAKW,MAAMI,MAClBqB,SAAUpC,KAAKgB,cAEdP,EAAeN,KAAI,SAAAC,GAAI,OACtB,4BACEW,MAAOX,EACPC,IAAKD,GAEJA,c,GAvHHE,IAAMC,eCfxB8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c9823f0e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class GoodsList extends React.PureComponent {\n  render() {\n    return (\n      <ul>\n        {this.props.goods.map(item => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedValues = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nclass App extends React.PureComponent {\n  state = {\n    showList: false,\n    isReversed: false,\n    sortBy: '',\n    value: '1',\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  startButton = () => {\n    this.setState({ showList: true });\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  sortAlph = () => {\n    this.setState({ sortBy: 'alphabet' });\n  }\n\n  sortLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  reset = () => {\n    this.setState({\n      sortBy: '', isReversed: false, value: '1',\n    });\n  }\n\n  render() {\n    const { isReversed, sortBy, showList, value } = this.state;\n\n    let goodsList = [...goodsFromServer];\n\n    if (value > 1) {\n      goodsList = [...goodsFromServer.filter(good => good.length >= value)];\n    }\n\n    goodsList.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return g1.localeCompare(g2);\n\n        case 'length':\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goodsList.reverse();\n    }\n\n    return (\n      <div className=\"App box has-text-centered\">\n        <h1 className=\"title is-1\">Goods</h1>\n        {!showList && (\n          <button\n            type=\"button\"\n            className=\"button is-primary is-light m-2\"\n            onClick={this.startButton}\n          >\n            Start\n          </button>\n        )}\n        {showList && (\n          <>\n            <GoodsList\n              goods={goodsList}\n            />\n            <div>\n              <button\n                type=\"button\"\n                onClick={this.reverse}\n                className=\"button is-link is-light m-2\"\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.sortAlph}\n                className=\"button is-success is-light m-2\"\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.sortLength}\n                className=\"button is-warning is-light m-2\"\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.reset}\n                className=\"button is-danger is-light m-2\"\n              >\n                Reset\n              </button>\n            </div>\n            <div className=\"select is-rounded\">\n              <select\n                value={this.state.value}\n                onChange={this.handleChange}\n              >\n                {preparedValues.map(item => (\n                  <option\n                    value={item}\n                    key={item}\n                  >\n                    {item}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}